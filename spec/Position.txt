Service: Position

Types: integer, enum Direction { HAUT, BAS, GAUCHE, DROITE }

Observators:
	const getLargeur : [Position] -> integer
	const getHauteur : [Position] -> integer
	getX : [Position] -> integer
	getY : [Position] -> integer

Constructors:
	init : integer * integer * integer * integer -> [Position]
		pre init(l, h, x, y) require l > 0 ^ h > 0 ^ x >= 0 ^ y >= 0

Operators:
	deplacerVersDirection : [Position] * Direction -> [Position]

Observations:
	[invariant]
		0 <= getX(p) < getLargeur(p)
		0 <= getY(p) < getHauteur(p)

	[init]
		getLargeur(init(l, h, x, y)) = l
		getHauteur(init(l, h, x, y)) = h
		getX(init(l, h, x, y)) = x mod l
		getY(init(l, h, x, y)) = y mod h

	[deplacerVersDirection]
		getX(deplacerVersDirection(p, dir)) =
			if dir = GAUCHE then
				(getX(p) - 1) mod getLargeur(p)
			else if dir = DROITE then
				(getX(p) + 1) mod getLargeur(p)
			else
				getX(p)
		getY(deplacerVersDirection(p, dir)) =
			if dir = HAUT then
				(getY(p) - 1) mod getHauteur(p)
			else if dir = BAS then
				(getY(p) + 1) mod getHauteur(p)
			else
				getY(p)
