Service: Position

Types: integer, enum Direction { HAUT, BAS, GAUCHE, DROITE }

Use: Terrain

Observators:
	const getLargeur : [Position] -> integer
	const getHauteur : [Position] -> integer
	getX : [Position] -> integer
	getY : [Position] -> integer
	
Constructors:
	init : Terrain * integer * integer -> [Position]
		pre init(x, y) require x >= 1 ^ y >= 1

Operators:
	deplacerVersDirection : [Position] * Direction -> [Position]
	
Observations:
	[init]
		getLargeur(init(T, x, y)) = Terrain::getLargeur()
		getHauteur(init(T, x, y)) = Terrain::getHauteur()
		getX(init(T, x, y)) = x mod Terrain::getLargeur()
		getY(init(T, x, y)) = y mod Terrain::getHauteur()
	
	[deplacerVersDirection]
		getX(deplacerVersDirection(p, dir)) =
			if dir = GAUCHE then
				(getX(p) - 1) mod getLargeur(p)
			else if dir = DROITE then
				(getX(p) + 1) mod getLargeur(p)
			else
				getX(p)
		getY(deplacerVersDirection(p, dir)) =
			if dir = HAUT then
				(getY(p) - 1) mod getHauteur(p)
			else if dir = BAS then
				(getY(p) + 1) mod getHauteur(p)
			else
				getY(p)
